name: Build and Push Docker Image to ECR

on:
  push:
    branches:
      - develop

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: |
            echo "Logging in to public ECR..."
            aws ecr-public get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin public.ecr.aws/z7d7p9s0

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: public.ecr.aws/z7d7p9s0/marshallinc:latest

      - name: Logout from Amazon ECR
        run: docker logout public.ecr.aws/z7d7p9s0

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update task definition image
        run: |
          sed -i 's|\"image\": \"public.ecr.aws/z7d7p9s0/marshallinc:.*\"|\"image\": 
          \"public.ecr.aws/z7d7p9s0/marshallinc:latest\"|' configs/ecs-task-def.json

      - name: Register new task definition
        run: |
          aws ecs register-task-definition --cli-input-json file://configs/ecs-task-def.json

      - name: Update ECS service
        run: |
          aws ecs update-service --cluster book-ms-cluster-1 --service bookmsservice --task-definition book-ms-app --force-new-deployment